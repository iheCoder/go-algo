package shortest_subarray_with_sum_at_least_k

import "testing"

func TestSSK(t *testing.T) {
	nums := []int{2, -1, 2}
	k := 3
	//t.Log(shortestSubarray(nums, k))
	nums = []int{56, -21, 56, 35, -9}
	k = 61
	//t.Log(shortestSubarray(nums, k))
	nums = []int{39353, 64606, -23508, 5678, -17612, 40217, 15351, -12613, -37037, 64183, 68965, -19778, -41764, -21512, 17700, -23100, 77370, 64076, 53385, 30915, 18025, 17577, 10658, 77805, 56466, -2947, 29423, 50001, 31803, 9888, 71251, -6466, 77254, -30515, 2903, 76974, -49661, -10089, 66626, -7065, -46652, 84755, -37843, -5067, 67963, 92475, 15340, 15212, 54320, -5286}
	k = 207007
	//t.Log(shortestSubarray(nums, k))
	nums = []int{21561, 90025, -727, 97620, -32349, 51727, 61981, -5497, -15065, -13872, 29914, 46523, 85161, 97337, 1339, 87825, 82665, -40600, -39757, 75326, -24015, 24001, -12052, 7401, 79410, 50875, 70500, 70536, 81029, -46312, 14738, 37105, -11381, 18574, 27894, 8264, -17261, 95534, 53718, -6889, 22931, -8874, 91323, -22375, 72550, 10819, 36300, 5431, 38748, 57078}
	k = 224501
	//t.Log(shortestSubarray(nums, k))
	nums = []int{53952, 44381, 64075, -23059, 96450, 44802, 62276, 60170, 21965, 32867, 85675, 70631, 57844, 7725, -39329, 22369, 70574, 7000, -23193, 1957, -30375, -42591, 3613, 43095, 28633, 84607, -22050, -33037, 4666, -12940, 57726, 94600, 65518, -29369, -24184, 28961, 7030, -33310, 36654, 62401, 64786, 57498, 52077, -24065, 8403, -8422, 37241, 52045, -3754, 1173, 58699, 86641, 19682, 81773, -42337, 69397, -11474, 20692, 62796, 36034, 72923, 36074, 60966, 51802, 9802, 43042, -32817, -16378, 54513, -27960, 32219, 62196, -23801, -16394, 40142, 54471, 71253, 44179, 1043, 28631, 93625, 18936, -7030, 86791, 91671, 72287, 98459, 61635, 74292, -48626, 22734, 82408, -15057, 41639, 28649, 11272, -187, -29328, 15828, 31785}
	k = 906158
	t.Log(shortestSubarray(nums, k))
	nums = []int{100, 10, -20, 100, 10, 90, -10, 20, 30}
	k = 200
	t.Log(shortestSubarray(nums, k))

	ns := []int{77370, 64076, 53385, 30915}
	var sum int
	//for _, n := range ns {
	//	sum += n
	//	_ = nums[0]
	//}
	//t.Log(sum >= k)
	ns = []int{46523, 85161, 97337}
	sum = 0
	for _, n := range ns {
		sum += n
		_ = nums[0]
	}
	t.Log(sum >= k)
}

func TestDetailCheck(t *testing.T) {
	x := 10
	x -= 7 - 5 + 1
	t.Log(x)

	nums := []int{100, 10, -20, 100, 10, 90, -10, 20, 30}
	sums := make([]int, len(nums))
	var sum int
	for i, num := range nums {
		sum += num
		sums[i] = sum
	}

	ni := 4
	var i int
	sum = 200
	for ni > i && sums[ni]-sums[i] > 0 {
		ni--
	}
	sum -= sums[ni] - sums[i] + nums[i]
	i = ni + 1
}
